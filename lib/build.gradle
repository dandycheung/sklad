apply plugin: 'com.android.library'

android {

    compileSdkVersion 27
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'BUILD_DIR', "\"$buildDir.absolutePath\""
        }

        debug {
            buildConfigField 'String', 'BUILD_DIR', "\"$buildDir.absolutePath\""
        }

    }

    lintOptions {
        disable 'InvalidPackage'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

}

def okhttpVersion = '3.4.2'
def robolectricVersion = "3.1.4"

dependencies {

    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.android.support:support-annotations:27.0.2'
    compile 'com.squareup.okhttp3:okhttp:' + okhttpVersion

    testCompile 'junit:junit:4.12'

    testCompile 'org.assertj:assertj-core:3.8.0'
    testCompile 'org.mockito:mockito-core:2.8.47'

    testCompile "org.robolectric:robolectric:" + robolectricVersion
    testCompile "org.robolectric:robolectric-annotations:" + robolectricVersion

    testCompile 'com.squareup.okhttp3:mockwebserver:' + okhttpVersion

    testCompile 'commons-io:commons-io:2.5'

}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

tasks.withType(Test) {
    testLogging {
        exceptionFormat "full"
        events "passed", "failed"
        showStandardStreams true
    }
}
